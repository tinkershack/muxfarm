// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v4.23.3
// source: plumbing.proto

package plumber

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StorageType int32

const (
	StorageType_STORAGE_UNSPECIFIED StorageType = 0
	StorageType_STORAGE_MUXFARM     StorageType = 1
	StorageType_STORAGE_FS          StorageType = 2
	StorageType_STORAGE_HTTP        StorageType = 3
	StorageType_STORAGE_S3          StorageType = 4
	StorageType_STORAGE_GCS         StorageType = 5
	StorageType_STORAGE_GIT         StorageType = 6
)

// Enum value maps for StorageType.
var (
	StorageType_name = map[int32]string{
		0: "STORAGE_UNSPECIFIED",
		1: "STORAGE_MUXFARM",
		2: "STORAGE_FS",
		3: "STORAGE_HTTP",
		4: "STORAGE_S3",
		5: "STORAGE_GCS",
		6: "STORAGE_GIT",
	}
	StorageType_value = map[string]int32{
		"STORAGE_UNSPECIFIED": 0,
		"STORAGE_MUXFARM":     1,
		"STORAGE_FS":          2,
		"STORAGE_HTTP":        3,
		"STORAGE_S3":          4,
		"STORAGE_GCS":         5,
		"STORAGE_GIT":         6,
	}
)

func (x StorageType) Enum() *StorageType {
	p := new(StorageType)
	*p = x
	return p
}

func (x StorageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StorageType) Descriptor() protoreflect.EnumDescriptor {
	return file_plumbing_proto_enumTypes[0].Descriptor()
}

func (StorageType) Type() protoreflect.EnumType {
	return &file_plumbing_proto_enumTypes[0]
}

func (x StorageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StorageType.Descriptor instead.
func (StorageType) EnumDescriptor() ([]byte, []int) {
	return file_plumbing_proto_rawDescGZIP(), []int{0}
}

type OperationType int32

const (
	OperationType_OPERATION_UNSPECIFIED OperationType = 0
	OperationType_OPERATION_REVELIO     OperationType = 1
	OperationType_OPERATION_ACID        OperationType = 2
	OperationType_OPERATION_DOOBIE      OperationType = 3
	OperationType_OPERATION_PULSE       OperationType = 4
)

// Enum value maps for OperationType.
var (
	OperationType_name = map[int32]string{
		0: "OPERATION_UNSPECIFIED",
		1: "OPERATION_REVELIO",
		2: "OPERATION_ACID",
		3: "OPERATION_DOOBIE",
		4: "OPERATION_PULSE",
	}
	OperationType_value = map[string]int32{
		"OPERATION_UNSPECIFIED": 0,
		"OPERATION_REVELIO":     1,
		"OPERATION_ACID":        2,
		"OPERATION_DOOBIE":      3,
		"OPERATION_PULSE":       4,
	}
)

func (x OperationType) Enum() *OperationType {
	p := new(OperationType)
	*p = x
	return p
}

func (x OperationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OperationType) Descriptor() protoreflect.EnumDescriptor {
	return file_plumbing_proto_enumTypes[1].Descriptor()
}

func (OperationType) Type() protoreflect.EnumType {
	return &file_plumbing_proto_enumTypes[1]
}

func (x OperationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OperationType.Descriptor instead.
func (OperationType) EnumDescriptor() ([]byte, []int) {
	return file_plumbing_proto_rawDescGZIP(), []int{1}
}

type MediaIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ins            []*Media   `protobuf:"bytes,1,rep,name=ins,proto3" json:"ins,omitempty"`
	StrictValidate bool       `protobuf:"varint,2,opt,name=strict_validate,json=strictValidate,proto3" json:"strict_validate,omitempty"` // All entries of media_ins must validate successfully
	Operation      *Operation `protobuf:"bytes,3,opt,name=operation,proto3" json:"operation,omitempty"`
}

func (x *MediaIn) Reset() {
	*x = MediaIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plumbing_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MediaIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaIn) ProtoMessage() {}

func (x *MediaIn) ProtoReflect() protoreflect.Message {
	mi := &file_plumbing_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaIn.ProtoReflect.Descriptor instead.
func (*MediaIn) Descriptor() ([]byte, []int) {
	return file_plumbing_proto_rawDescGZIP(), []int{0}
}

func (x *MediaIn) GetIns() []*Media {
	if x != nil {
		return x.Ins
	}
	return nil
}

func (x *MediaIn) GetStrictValidate() bool {
	if x != nil {
		return x.StrictValidate
	}
	return false
}

func (x *MediaIn) GetOperation() *Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

type MediaOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Out       *Media     `protobuf:"bytes,1,opt,name=out,proto3" json:"out,omitempty"`
	Operation *Operation `protobuf:"bytes,2,opt,name=operation,proto3" json:"operation,omitempty"`
}

func (x *MediaOut) Reset() {
	*x = MediaOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plumbing_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MediaOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaOut) ProtoMessage() {}

func (x *MediaOut) ProtoReflect() protoreflect.Message {
	mi := &file_plumbing_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaOut.ProtoReflect.Descriptor instead.
func (*MediaOut) Descriptor() ([]byte, []int) {
	return file_plumbing_proto_rawDescGZIP(), []int{1}
}

func (x *MediaOut) GetOut() *Media {
	if x != nil {
		return x.Out
	}
	return nil
}

func (x *MediaOut) GetOperation() *Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

type Media struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type StorageType `protobuf:"varint,1,opt,name=type,proto3,enum=plumber.StorageType" json:"type,omitempty"`
	Path *URI        `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *Media) Reset() {
	*x = Media{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plumbing_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Media) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Media) ProtoMessage() {}

func (x *Media) ProtoReflect() protoreflect.Message {
	mi := &file_plumbing_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Media.ProtoReflect.Descriptor instead.
func (*Media) Descriptor() ([]byte, []int) {
	return file_plumbing_proto_rawDescGZIP(), []int{2}
}

func (x *Media) GetType() StorageType {
	if x != nil {
		return x.Type
	}
	return StorageType_STORAGE_UNSPECIFIED
}

func (x *Media) GetPath() *URI {
	if x != nil {
		return x.Path
	}
	return nil
}

type URI struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Uri:
	//	*URI_Mid
	//	*URI_FsPath
	//	*URI_HttpPath
	//	*URI_S3Path
	//	*URI_GcsPath
	//	*URI_GitPath
	Uri isURI_Uri `protobuf_oneof:"uri"`
}

func (x *URI) Reset() {
	*x = URI{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plumbing_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *URI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*URI) ProtoMessage() {}

func (x *URI) ProtoReflect() protoreflect.Message {
	mi := &file_plumbing_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use URI.ProtoReflect.Descriptor instead.
func (*URI) Descriptor() ([]byte, []int) {
	return file_plumbing_proto_rawDescGZIP(), []int{3}
}

func (m *URI) GetUri() isURI_Uri {
	if m != nil {
		return m.Uri
	}
	return nil
}

func (x *URI) GetMid() string {
	if x, ok := x.GetUri().(*URI_Mid); ok {
		return x.Mid
	}
	return ""
}

func (x *URI) GetFsPath() string {
	if x, ok := x.GetUri().(*URI_FsPath); ok {
		return x.FsPath
	}
	return ""
}

func (x *URI) GetHttpPath() string {
	if x, ok := x.GetUri().(*URI_HttpPath); ok {
		return x.HttpPath
	}
	return ""
}

func (x *URI) GetS3Path() string {
	if x, ok := x.GetUri().(*URI_S3Path); ok {
		return x.S3Path
	}
	return ""
}

func (x *URI) GetGcsPath() string {
	if x, ok := x.GetUri().(*URI_GcsPath); ok {
		return x.GcsPath
	}
	return ""
}

func (x *URI) GetGitPath() string {
	if x, ok := x.GetUri().(*URI_GitPath); ok {
		return x.GitPath
	}
	return ""
}

type isURI_Uri interface {
	isURI_Uri()
}

type URI_Mid struct {
	Mid string `protobuf:"bytes,1,opt,name=mid,proto3,oneof"` // Muxfarm object ID
}

type URI_FsPath struct {
	FsPath string `protobuf:"bytes,2,opt,name=fs_path,json=fsPath,proto3,oneof"` // Filesystem URI
}

type URI_HttpPath struct {
	HttpPath string `protobuf:"bytes,3,opt,name=http_path,json=httpPath,proto3,oneof"` // HTTP URL
}

type URI_S3Path struct {
	S3Path string `protobuf:"bytes,4,opt,name=s3_path,json=s3Path,proto3,oneof"` // S3 URI, S3 HTTP object URL
}

type URI_GcsPath struct {
	GcsPath string `protobuf:"bytes,5,opt,name=gcs_path,json=gcsPath,proto3,oneof"` // GCS URL
}

type URI_GitPath struct {
	GitPath string `protobuf:"bytes,6,opt,name=git_path,json=gitPath,proto3,oneof"` // git URL
}

func (*URI_Mid) isURI_Uri() {}

func (*URI_FsPath) isURI_Uri() {}

func (*URI_HttpPath) isURI_Uri() {}

func (*URI_S3Path) isURI_Uri() {}

func (*URI_GcsPath) isURI_Uri() {}

func (*URI_GitPath) isURI_Uri() {}

type Operation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Revelio *Revelio `protobuf:"bytes,1,opt,name=revelio,proto3" json:"revelio,omitempty"`
	Acid    *Acid    `protobuf:"bytes,2,opt,name=acid,proto3" json:"acid,omitempty"`
	Doobie  *Doobie  `protobuf:"bytes,3,opt,name=doobie,proto3" json:"doobie,omitempty"`
	Pulse   *Pulse   `protobuf:"bytes,4,opt,name=pulse,proto3" json:"pulse,omitempty"`
}

func (x *Operation) Reset() {
	*x = Operation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plumbing_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Operation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operation) ProtoMessage() {}

func (x *Operation) ProtoReflect() protoreflect.Message {
	mi := &file_plumbing_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operation.ProtoReflect.Descriptor instead.
func (*Operation) Descriptor() ([]byte, []int) {
	return file_plumbing_proto_rawDescGZIP(), []int{4}
}

func (x *Operation) GetRevelio() *Revelio {
	if x != nil {
		return x.Revelio
	}
	return nil
}

func (x *Operation) GetAcid() *Acid {
	if x != nil {
		return x.Acid
	}
	return nil
}

func (x *Operation) GetDoobie() *Doobie {
	if x != nil {
		return x.Doobie
	}
	return nil
}

func (x *Operation) GetPulse() *Pulse {
	if x != nil {
		return x.Pulse
	}
	return nil
}

type Callback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *Callback) Reset() {
	*x = Callback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plumbing_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Callback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Callback) ProtoMessage() {}

func (x *Callback) ProtoReflect() protoreflect.Message {
	mi := &file_plumbing_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Callback.ProtoReflect.Descriptor instead.
func (*Callback) Descriptor() ([]byte, []int) {
	return file_plumbing_proto_rawDescGZIP(), []int{5}
}

func (x *Callback) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type Revelio struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Media *Media `protobuf:"bytes,1,opt,name=media,proto3" json:"media,omitempty"`
}

func (x *Revelio) Reset() {
	*x = Revelio{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plumbing_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Revelio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Revelio) ProtoMessage() {}

func (x *Revelio) ProtoReflect() protoreflect.Message {
	mi := &file_plumbing_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Revelio.ProtoReflect.Descriptor instead.
func (*Revelio) Descriptor() ([]byte, []int) {
	return file_plumbing_proto_rawDescGZIP(), []int{6}
}

func (x *Revelio) GetMedia() *Media {
	if x != nil {
		return x.Media
	}
	return nil
}

type Acid struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Media *Media `protobuf:"bytes,1,opt,name=media,proto3" json:"media,omitempty"`
}

func (x *Acid) Reset() {
	*x = Acid{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plumbing_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Acid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Acid) ProtoMessage() {}

func (x *Acid) ProtoReflect() protoreflect.Message {
	mi := &file_plumbing_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Acid.ProtoReflect.Descriptor instead.
func (*Acid) Descriptor() ([]byte, []int) {
	return file_plumbing_proto_rawDescGZIP(), []int{7}
}

func (x *Acid) GetMedia() *Media {
	if x != nil {
		return x.Media
	}
	return nil
}

type Doobie struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Media *Media `protobuf:"bytes,1,opt,name=media,proto3" json:"media,omitempty"`
}

func (x *Doobie) Reset() {
	*x = Doobie{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plumbing_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Doobie) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Doobie) ProtoMessage() {}

func (x *Doobie) ProtoReflect() protoreflect.Message {
	mi := &file_plumbing_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Doobie.ProtoReflect.Descriptor instead.
func (*Doobie) Descriptor() ([]byte, []int) {
	return file_plumbing_proto_rawDescGZIP(), []int{8}
}

func (x *Doobie) GetMedia() *Media {
	if x != nil {
		return x.Media
	}
	return nil
}

type Pulse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Media *Media `protobuf:"bytes,1,opt,name=media,proto3" json:"media,omitempty"`
}

func (x *Pulse) Reset() {
	*x = Pulse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plumbing_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pulse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pulse) ProtoMessage() {}

func (x *Pulse) ProtoReflect() protoreflect.Message {
	mi := &file_plumbing_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pulse.ProtoReflect.Descriptor instead.
func (*Pulse) Descriptor() ([]byte, []int) {
	return file_plumbing_proto_rawDescGZIP(), []int{9}
}

func (x *Pulse) GetMedia() *Media {
	if x != nil {
		return x.Media
	}
	return nil
}

var File_plumbing_proto protoreflect.FileDescriptor

var file_plumbing_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x70, 0x6c, 0x75, 0x6d, 0x62, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x07, 0x70, 0x6c, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x86, 0x01, 0x0a, 0x07, 0x4d, 0x65,
	0x64, 0x69, 0x61, 0x49, 0x6e, 0x12, 0x20, 0x0a, 0x03, 0x69, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x6c, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x4d, 0x65, 0x64,
	0x69, 0x61, 0x52, 0x03, 0x69, 0x6e, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x74, 0x72, 0x69, 0x63,
	0x74, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0e, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x30, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x6c, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x5e, 0x0a, 0x08, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x4f, 0x75, 0x74, 0x12, 0x20,
	0x0a, 0x03, 0x6f, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x6c,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x03, 0x6f, 0x75, 0x74,
	0x12, 0x30, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x6c, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x53, 0x0a, 0x05, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x28, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x70, 0x6c, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x6c, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x55, 0x52,
	0x49, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0xaf, 0x01, 0x0a, 0x03, 0x55, 0x52, 0x49, 0x12,
	0x12, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03,
	0x6d, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x07, 0x66, 0x73, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x66, 0x73, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1d,
	0x0a, 0x09, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x08, 0x68, 0x74, 0x74, 0x70, 0x50, 0x61, 0x74, 0x68, 0x12, 0x19, 0x0a,
	0x07, 0x73, 0x33, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x06, 0x73, 0x33, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1b, 0x0a, 0x08, 0x67, 0x63, 0x73, 0x5f,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x67, 0x63,
	0x73, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1b, 0x0a, 0x08, 0x67, 0x69, 0x74, 0x5f, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x67, 0x69, 0x74, 0x50, 0x61,
	0x74, 0x68, 0x42, 0x05, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x22, 0xa9, 0x01, 0x0a, 0x09, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x07, 0x72, 0x65, 0x76, 0x65, 0x6c,
	0x69, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x6c, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x2e, 0x52, 0x65, 0x76, 0x65, 0x6c, 0x69, 0x6f, 0x52, 0x07, 0x72, 0x65, 0x76, 0x65,
	0x6c, 0x69, 0x6f, 0x12, 0x21, 0x0a, 0x04, 0x61, 0x63, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x6c, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x69, 0x64,
	0x52, 0x04, 0x61, 0x63, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x06, 0x64, 0x6f, 0x6f, 0x62, 0x69, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x6c, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x2e, 0x44, 0x6f, 0x6f, 0x62, 0x69, 0x65, 0x52, 0x06, 0x64, 0x6f, 0x6f, 0x62, 0x69, 0x65, 0x12,
	0x24, 0x0a, 0x05, 0x70, 0x75, 0x6c, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x70, 0x6c, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x52, 0x05,
	0x70, 0x75, 0x6c, 0x73, 0x65, 0x22, 0x1c, 0x0a, 0x08, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63,
	0x6b, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x22, 0x2f, 0x0a, 0x07, 0x52, 0x65, 0x76, 0x65, 0x6c, 0x69, 0x6f, 0x12, 0x24,
	0x0a, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x70, 0x6c, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x05, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x22, 0x2c, 0x0a, 0x04, 0x41, 0x63, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x05,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x6c,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x05, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x22, 0x2e, 0x0a, 0x06, 0x44, 0x6f, 0x6f, 0x62, 0x69, 0x65, 0x12, 0x24, 0x0a, 0x05,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x6c,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x05, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x22, 0x2d, 0x0a, 0x05, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x05, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x6c, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x05, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x2a, 0x8f, 0x01, 0x0a, 0x0b, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x54, 0x4f, 0x52, 0x41, 0x47, 0x45, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x54,
	0x4f, 0x52, 0x41, 0x47, 0x45, 0x5f, 0x4d, 0x55, 0x58, 0x46, 0x41, 0x52, 0x4d, 0x10, 0x01, 0x12,
	0x0e, 0x0a, 0x0a, 0x53, 0x54, 0x4f, 0x52, 0x41, 0x47, 0x45, 0x5f, 0x46, 0x53, 0x10, 0x02, 0x12,
	0x10, 0x0a, 0x0c, 0x53, 0x54, 0x4f, 0x52, 0x41, 0x47, 0x45, 0x5f, 0x48, 0x54, 0x54, 0x50, 0x10,
	0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x54, 0x4f, 0x52, 0x41, 0x47, 0x45, 0x5f, 0x53, 0x33, 0x10,
	0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x54, 0x4f, 0x52, 0x41, 0x47, 0x45, 0x5f, 0x47, 0x43, 0x53,
	0x10, 0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x54, 0x4f, 0x52, 0x41, 0x47, 0x45, 0x5f, 0x47, 0x49,
	0x54, 0x10, 0x06, 0x2a, 0x80, 0x01, 0x0a, 0x0d, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x15, 0x0a, 0x11, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45,
	0x56, 0x45, 0x4c, 0x49, 0x4f, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x4f, 0x50, 0x45, 0x52, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x43, 0x49, 0x44, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x4f,
	0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x4f, 0x4f, 0x42, 0x49, 0x45, 0x10,
	0x03, 0x12, 0x13, 0x0a, 0x0f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x50,
	0x55, 0x4c, 0x53, 0x45, 0x10, 0x04, 0x32, 0x37, 0x0a, 0x04, 0x4d, 0x6f, 0x70, 0x73, 0x12, 0x2f,
	0x0a, 0x04, 0x4d, 0x69, 0x6d, 0x6f, 0x12, 0x10, 0x2e, 0x70, 0x6c, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x6e, 0x1a, 0x11, 0x2e, 0x70, 0x6c, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x4f, 0x75, 0x74, 0x22, 0x00, 0x30, 0x01, 0x42,
	0x28, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x69,
	0x6e, 0x6b, 0x65, 0x72, 0x73, 0x68, 0x61, 0x63, 0x6b, 0x2f, 0x6d, 0x75, 0x78, 0x66, 0x61, 0x72,
	0x6d, 0x2f, 0x70, 0x6c, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_plumbing_proto_rawDescOnce sync.Once
	file_plumbing_proto_rawDescData = file_plumbing_proto_rawDesc
)

func file_plumbing_proto_rawDescGZIP() []byte {
	file_plumbing_proto_rawDescOnce.Do(func() {
		file_plumbing_proto_rawDescData = protoimpl.X.CompressGZIP(file_plumbing_proto_rawDescData)
	})
	return file_plumbing_proto_rawDescData
}

var file_plumbing_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_plumbing_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_plumbing_proto_goTypes = []interface{}{
	(StorageType)(0),   // 0: plumber.StorageType
	(OperationType)(0), // 1: plumber.OperationType
	(*MediaIn)(nil),    // 2: plumber.MediaIn
	(*MediaOut)(nil),   // 3: plumber.MediaOut
	(*Media)(nil),      // 4: plumber.Media
	(*URI)(nil),        // 5: plumber.URI
	(*Operation)(nil),  // 6: plumber.Operation
	(*Callback)(nil),   // 7: plumber.Callback
	(*Revelio)(nil),    // 8: plumber.Revelio
	(*Acid)(nil),       // 9: plumber.Acid
	(*Doobie)(nil),     // 10: plumber.Doobie
	(*Pulse)(nil),      // 11: plumber.Pulse
}
var file_plumbing_proto_depIdxs = []int32{
	4,  // 0: plumber.MediaIn.ins:type_name -> plumber.Media
	6,  // 1: plumber.MediaIn.operation:type_name -> plumber.Operation
	4,  // 2: plumber.MediaOut.out:type_name -> plumber.Media
	6,  // 3: plumber.MediaOut.operation:type_name -> plumber.Operation
	0,  // 4: plumber.Media.type:type_name -> plumber.StorageType
	5,  // 5: plumber.Media.path:type_name -> plumber.URI
	8,  // 6: plumber.Operation.revelio:type_name -> plumber.Revelio
	9,  // 7: plumber.Operation.acid:type_name -> plumber.Acid
	10, // 8: plumber.Operation.doobie:type_name -> plumber.Doobie
	11, // 9: plumber.Operation.pulse:type_name -> plumber.Pulse
	4,  // 10: plumber.Revelio.media:type_name -> plumber.Media
	4,  // 11: plumber.Acid.media:type_name -> plumber.Media
	4,  // 12: plumber.Doobie.media:type_name -> plumber.Media
	4,  // 13: plumber.Pulse.media:type_name -> plumber.Media
	2,  // 14: plumber.Mops.Mimo:input_type -> plumber.MediaIn
	3,  // 15: plumber.Mops.Mimo:output_type -> plumber.MediaOut
	15, // [15:16] is the sub-list for method output_type
	14, // [14:15] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_plumbing_proto_init() }
func file_plumbing_proto_init() {
	if File_plumbing_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_plumbing_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MediaIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plumbing_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MediaOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plumbing_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Media); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plumbing_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*URI); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plumbing_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Operation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plumbing_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Callback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plumbing_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Revelio); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plumbing_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Acid); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plumbing_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Doobie); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plumbing_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pulse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_plumbing_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*URI_Mid)(nil),
		(*URI_FsPath)(nil),
		(*URI_HttpPath)(nil),
		(*URI_S3Path)(nil),
		(*URI_GcsPath)(nil),
		(*URI_GitPath)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_plumbing_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_plumbing_proto_goTypes,
		DependencyIndexes: file_plumbing_proto_depIdxs,
		EnumInfos:         file_plumbing_proto_enumTypes,
		MessageInfos:      file_plumbing_proto_msgTypes,
	}.Build()
	File_plumbing_proto = out.File
	file_plumbing_proto_rawDesc = nil
	file_plumbing_proto_goTypes = nil
	file_plumbing_proto_depIdxs = nil
}
