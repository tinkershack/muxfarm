syntax = "proto3";
package plumber;

option go_package = "github.com/tinkershack/muxfarm/plumber";

// Muxfarm operations
service Mops {
    // Media In Media Out
    rpc Mimo(MediaIn) returns (stream MediaOut) {}
}

message MediaIn {
    repeated Media ins = 1;
    bool strict_validate = 2; // All entries of media_ins must validate successfully
    Operation operation = 3;
}

message MediaOut {
    Media out = 1;
    Operation operation = 2;
}

message Media {
    StorageType type = 1;
    URI path = 2;
}

enum StorageType {
    STORAGE_UNSPECIFIED = 0;
    STORAGE_MUXFARM = 1;
    STORAGE_FS = 2;
    STORAGE_HTTP = 3;
    STORAGE_S3 = 4;
    STORAGE_GCS = 5;
    STORAGE_GIT = 6;
}

message URI {
    oneof uri {
        string mid = 1;         // Muxfarm object ID
        string fs_path = 2;     // Filesystem URI
        string http_path = 3;   // HTTP URL
        string s3_path = 4;     // S3 URI, S3 HTTP object URL
        string gcs_path = 5;     // GCS URL
        string git_path = 6;     // git URL
    }

}

message Operation {
    Revelio revelio = 1;
    Acid acid = 2;
    Doobie doobie = 3;
    Pulse pulse = 4;
}

enum OperationType {
    OPERATION_UNSPECIFIED = 0;
    OPERATION_REVELIO = 1;
    OPERATION_ACID = 2;
    OPERATION_DOOBIE = 3;
    OPERATION_PULSE = 4;
}

message Callback {
    string url = 1;
}

message Revelio {
    Media media = 1;

}

message Acid {
    Media media = 1;

}

message Doobie {
    Media media = 1;

}

message Pulse {
    Media media = 1;

}
